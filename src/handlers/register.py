from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram import Bot
from state.register import RegisterState
import re
import os
from utils.database import Database


async def start_register(message: Message, state: FSMContext, bot: Bot):
    db = Database(os.getenv('DATABASE_NAME'))
    users = db.select_user_id(message.from_user.id)
    if (users):
        await bot.send_message(message.from_user.id, f'–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –∏–º–µ–Ω–µ–º {users[1]}')
    else:
        await (message.answer(f'–ù–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é \n –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?'))
        await state.set_state(RegisterState.regName)

async def register_name(message: Message, state: FSMContext, bot: Bot):
    await bot.send_message(message.from_user.id, f'–ø—Ä–∏–≤–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.text} \n'
                        f'—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±')
    await state.update_data(regname= message.text)
    await state.set_state(RegisterState.regPhone)

async def register_phone(message: Message, state: FSMContext, bot: Bot):
    if(re.findall('^\+?[7][-\(]?\d{3}\)?-?\d{3}-?\d{2}-?\d{2}$', message.text)):
        await state.update_data(regphone=message.text)
        reg_date = await state.get_data()
        reg_name = reg_date.get('regname')
        reg_phone = reg_date.get('regphone')

        msg = f'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, {reg_name} \n\n –¢–µ–ª–µ—Ñ–æ–Ω - {reg_phone}'
        await bot.send_message(message.from_user.id, msg)
        db = Database(os.getenv('DATABASE_NAME'))
        db.add_user(reg_name, reg_phone, message.from_user.id)
        await state.clear()

    else:
        await bot.send_message(message.from_user.id, f'—Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ–≤–µ—Ä–µ–Ω ‚ùå')
    